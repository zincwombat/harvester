{sys, [
       {lib_dirs, ["../deps"]},
       {erts, [{mod_cond, derived}, {app_file, strip}]},
       {app_file, strip},
       {rel, "harvester", "1.0.0",
        [
         kernel,
         stdlib,
         sasl,
         crypto,
         mnesia,
         public_key,
         ssl,
         compiler,
         inets,
         lager,
         folsom,
         jiffy,
         jsx,
         shotgun,
         esn_kernel,
         arachnid
        ]},
       {rel, "start_clean", "",
        [
         kernel,
         stdlib
        ]},
       {boot_rel,     "harvester"},
       {profile,      embedded},
       {incl_cond,    exclude},
       {excl_archive_filters, 	[".*"]}, %% Do not archive built libs
       {excl_sys_filters, ["^bin/.*", "^erts.*/bin/(dialyzer|typer)",
                           "^erts.*/(doc|info|include|lib|man|src)"]},
       {excl_app_filters, ["\.gitignore"]},
       {app, sasl,        [{incl_cond, include}]},
       {app, stdlib,      [{incl_cond, include}]},
       {app, kernel,      [{incl_cond, include}]},
       {app, compiler, 		[{incl_cond, include}]},
       {app, mnesia,      [{incl_cond, include}]},
       {app, inets,       [{incl_cond, include}]},
       {app, asn1,        [{incl_cond, include}]},
       {app, crypto,      [{incl_cond, include}]},
       {app, ssl,         [{incl_cond, include}]},
       {app, public_key,  [{incl_cond, include}]},
       {app, syntax_tools,[{incl_cond, include}]},
       {app, arachnid,    [{incl_cond, include}]},
       {app, esn_kernel,  [{incl_cond, include}]},
       {app, bear,        [{incl_cond, include}]},
       {app, folsom,      [{incl_cond, include}]},
       {app, jiffy,       [{incl_cond, include}]},
       {app, lager,       [{incl_cond, include}]},
       {app, goldrush,    [{incl_cond, include}]},
       {app, meck,        [{incl_cond, include}]},
       {app, yaws,        [{incl_cond, include}]},
       {app, posregex,	 	[{incl_cond, include}]},
       {app, xmerl,       [{incl_cond, include}]},
       {app, jsx,         [{incl_cond, include}]},
       {app, cowlib,      [{incl_cond, include}]},
       {app, gun,         [{incl_cond, include}]},
       {app, ranch,       [{incl_cond, include}]},
       {app, shotgun,     [{incl_cond, include}]}
]}.

{target_dir, "harvester"}.

{overlay, [
           {mkdir,      "log/sasl"},
           {mkdir,      "log/www"},
           {mkdir,      "www/css"},
           {mkdir,      "www/gfx"},
           {mkdir,      "www/js"},
           {mkdir,      "www/jsolait"},
           {mkdir,      "www/html5"}, 
           {mkdir,      "www/data"},
           {copy,       "../deps/arachnid/priv/www/css/*.css", "www/css"},
           {copy,       "../deps/arachnid/priv/www/js/*.js", "www/js"},
           {copy,       "../deps/arachnid/priv/www/gfx/*", "www/gfx"},
           {copy,       "../deps/arachnid/priv/www/jsolait/*", "www/jsolait"},
           %% standard from here on ....
           {copy,       "files/erl", "\{\{erts_vsn\}\}/bin/erl"},
           {copy,       "files/nodetool", "\{\{erts_vsn\}\}/bin/nodetool"},
           {copy,       "files/harvester", "bin/harvester"},
           {template,   "files/sys.config", "releases/\{\{rel_vsn\}\}/sys.config"},
           {copy,       "files/harvester.cmd", "bin/harvester.cmd"},
           {copy,       "files/start_erl.cmd", "bin/start_erl.cmd"},
           {template,   "files/vm.args", "releases/\{\{rel_vsn\}\}/vm.args"}
          ]}.
